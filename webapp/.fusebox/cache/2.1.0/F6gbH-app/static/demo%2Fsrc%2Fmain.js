module.exports = { contents: "\"use strict\";\n// tslint:disable:no-console\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar muse_1 = require(\"./../../src/muse\");\nwindow.connect = function () { return __awaiter(_this, void 0, void 0, function () {\n    function plot(reading) {\n        var canvas = canvases[reading.electrode];\n        var context = canvasCtx[reading.electrode];\n        if (!context) {\n            return;\n        }\n        var width = canvas.width / 12.0;\n        var height = canvas.height / 2.0;\n        context.fillStyle = 'green';\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        for (var i = 0; i < reading.samples.length; i++) {\n            var sample = reading.samples[i] / 15.;\n            if (sample > 0) {\n                context.fillRect(i * 25, height - sample, width, sample);\n            }\n            else {\n                context.fillRect(i * 25, height, width, -sample);\n            }\n        }\n    }\n    var graphTitles, canvases, canvasCtx, client, err_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                graphTitles = Array.from(document.querySelectorAll('.electrode-item h3'));\n                canvases = Array.from(document.querySelectorAll('.electrode-item canvas'));\n                canvasCtx = canvases.map(function (canvas) { return canvas.getContext('2d'); });\n                graphTitles.forEach(function (item, index) {\n                    item.textContent = muse_1.channelNames[index];\n                });\n                client = new muse_1.MuseClient();\n                client.connectionStatus.subscribe(function (status) {\n                    console.log(status ? 'Connected!' : 'Disconnected');\n                });\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 5, , 6]);\n                client.enableAux = true;\n                return [4 /*yield*/, client.connect()];\n            case 2:\n                _a.sent();\n                return [4 /*yield*/, client.start()];\n            case 3:\n                _a.sent();\n                document.getElementById('headset-name').innerText = client.deviceName;\n                client.eegReadings.subscribe(function (reading) {\n                    plot(reading);\n                });\n                client.telemetryData.subscribe(function (reading) {\n                    document.getElementById('temperature').innerText = reading.temperature.toString() + 'â„ƒ';\n                    document.getElementById('batteryLevel').innerText = reading.batteryLevel.toFixed(2) + '%';\n                });\n                client.accelerometerData.subscribe(function (accel) {\n                    var normalize = function (v) { return (v / 16384.).toFixed(2) + 'g'; };\n                    document.getElementById('accelerometer-x').innerText = normalize(accel.samples[2].x);\n                    document.getElementById('accelerometer-y').innerText = normalize(accel.samples[2].y);\n                    document.getElementById('accelerometer-z').innerText = normalize(accel.samples[2].z);\n                });\n                return [4 /*yield*/, client.deviceInfo().then(function (deviceInfo) {\n                        document.getElementById('hardware-version').innerText = deviceInfo.hw;\n                        document.getElementById('firmware-version').innerText = deviceInfo.fw;\n                    })];\n            case 4:\n                _a.sent();\n                return [3 /*break*/, 6];\n            case 5:\n                err_1 = _a.sent();\n                console.error('Connection failed', err_1);\n                return [3 /*break*/, 6];\n            case 6: return [2 /*return*/];\n        }\n    });\n}); };\n//# sourceMappingURL=main.js.map",
dependencies: ["./../../src/muse"],
sourceMap: "{\"version\":3,\"file\":\"demo/src/main.js\",\"sourceRoot\":\"\",\"sources\":[\"demo/src/main.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"// tslint:disable:no-console\\n\\nimport { channelNames, EEGReading, MuseClient } from './../../src/muse';\\n\\n(window as any).connect = async () => {\\n    const graphTitles = Array.from(document.querySelectorAll('.electrode-item h3'));\\n    const canvases = Array.from(document.querySelectorAll('.electrode-item canvas')) as HTMLCanvasElement[];\\n    const canvasCtx = canvases.map((canvas) => canvas.getContext('2d'));\\n\\n    graphTitles.forEach((item, index) => {\\n        item.textContent = channelNames[index];\\n    });\\n\\n    function plot(reading: EEGReading) {\\n        const canvas = canvases[reading.electrode];\\n        const context = canvasCtx[reading.electrode];\\n        if (!context) {\\n            return;\\n        }\\n        const width = canvas.width / 12.0;\\n        const height = canvas.height / 2.0;\\n        context.fillStyle = 'green';\\n        context.clearRect(0, 0, canvas.width, canvas.height);\\n\\n        for (let i = 0; i < reading.samples.length; i++) {\\n            const sample = reading.samples[i] / 15.;\\n            if (sample > 0) {\\n                context.fillRect(i * 25, height - sample, width, sample);\\n            } else {\\n                context.fillRect(i * 25, height, width, -sample);\\n            }\\n        }\\n    }\\n\\n    const client = new MuseClient();\\n    client.connectionStatus.subscribe((status) => {\\n        console.log(status ? 'Connected!' : 'Disconnected');\\n    });\\n\\n    try {\\n        client.enableAux = true;\\n        await client.connect();\\n        await client.start();\\n        document.getElementById('headset-name')!.innerText = client.deviceName;\\n        client.eegReadings.subscribe((reading) => {\\n            plot(reading);\\n        });\\n        client.telemetryData.subscribe((reading) => {\\n            document.getElementById('temperature')!.innerText = reading.temperature.toString() + 'â„ƒ';\\n            document.getElementById('batteryLevel')!.innerText = reading.batteryLevel.toFixed(2) + '%';\\n        });\\n        client.accelerometerData.subscribe((accel) => {\\n            const normalize = (v: number) => (v / 16384.).toFixed(2) + 'g';\\n            document.getElementById('accelerometer-x')!.innerText = normalize(accel.samples[2].x);\\n            document.getElementById('accelerometer-y')!.innerText = normalize(accel.samples[2].y);\\n            document.getElementById('accelerometer-z')!.innerText = normalize(accel.samples[2].z);\\n        });\\n        await client.deviceInfo().then((deviceInfo) => {\\n            document.getElementById('hardware-version')!.innerText = deviceInfo.hw;\\n            document.getElementById('firmware-version')!.innerText = deviceInfo.fw;\\n        });\\n    } catch (err) {\\n        console.error('Connection failed', err);\\n    }\\n};\\n\"]}",
headerContent: undefined,
mtime: 1578214476000
};