module.exports = { contents: "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar muse_interfaces_1 = require(\"./lib/muse-interfaces\");\nexports.AccelerometerData = muse_interfaces_1.AccelerometerData;\nexports.EEGReading = muse_interfaces_1.EEGReading;\nexports.GyroscopeData = muse_interfaces_1.GyroscopeData;\nexports.MuseControlResponse = muse_interfaces_1.MuseControlResponse;\nexports.TelemetryData = muse_interfaces_1.TelemetryData;\nexports.XYZ = muse_interfaces_1.XYZ;\nvar muse_parse_1 = require(\"./lib/muse-parse\");\nvar muse_utils_1 = require(\"./lib/muse-utils\");\nvar zip_samples_1 = require(\"./lib/zip-samples\");\nexports.zipSamples = zip_samples_1.zipSamples;\nexports.EEGSample = zip_samples_1.EEGSample;\nexports.MUSE_SERVICE = 0xfe8d;\nvar CONTROL_CHARACTERISTIC = '273e0001-4c4d-454d-96be-f03bac821358';\nvar TELEMETRY_CHARACTERISTIC = '273e000b-4c4d-454d-96be-f03bac821358';\nvar GYROSCOPE_CHARACTERISTIC = '273e0009-4c4d-454d-96be-f03bac821358';\nvar ACCELEROMETER_CHARACTERISTIC = '273e000a-4c4d-454d-96be-f03bac821358';\nvar EEG_CHARACTERISTICS = [\n    '273e0003-4c4d-454d-96be-f03bac821358',\n    '273e0004-4c4d-454d-96be-f03bac821358',\n    '273e0005-4c4d-454d-96be-f03bac821358',\n    '273e0006-4c4d-454d-96be-f03bac821358',\n    '273e0007-4c4d-454d-96be-f03bac821358',\n];\nexports.EEG_FREQUENCY = 256;\n// These names match the characteristics defined in EEG_CHARACTERISTICS above\nexports.channelNames = ['TP9', 'AF7', 'AF8', 'TP10', 'AUX'];\nvar MuseClient = /** @class */ (function () {\n    function MuseClient() {\n        this.enableAux = false;\n        this.deviceName = '';\n        this.connectionStatus = new rxjs_1.BehaviorSubject(false);\n        this.gatt = null;\n        this.lastIndex = null;\n        this.lastTimestamp = null;\n    }\n    MuseClient.prototype.connect = function (gatt) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var device, _a, service, _b, _c, telemetryCharacteristic, _d, gyroscopeCharacteristic, _e, accelerometerCharacteristic, _f, eegObservables, channelCount, _loop_1, this_1, channelIndex;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        if (!gatt) return [3 /*break*/, 1];\n                        this.gatt = gatt;\n                        return [3 /*break*/, 4];\n                    case 1: return [4 /*yield*/, navigator.bluetooth.requestDevice({\n                            filters: [{ services: [exports.MUSE_SERVICE] }],\n                        })];\n                    case 2:\n                        device = _g.sent();\n                        _a = this;\n                        return [4 /*yield*/, device.gatt.connect()];\n                    case 3:\n                        _a.gatt = _g.sent();\n                        _g.label = 4;\n                    case 4:\n                        this.deviceName = this.gatt.device.name || null;\n                        return [4 /*yield*/, this.gatt.getPrimaryService(exports.MUSE_SERVICE)];\n                    case 5:\n                        service = _g.sent();\n                        rxjs_1.fromEvent(this.gatt.device, 'gattserverdisconnected')\n                            .pipe(operators_1.first())\n                            .subscribe(function () {\n                            _this.gatt = null;\n                            _this.connectionStatus.next(false);\n                        });\n                        // Control\n                        _b = this;\n                        return [4 /*yield*/, service.getCharacteristic(CONTROL_CHARACTERISTIC)];\n                    case 6:\n                        // Control\n                        _b.controlChar = _g.sent();\n                        _c = this;\n                        return [4 /*yield*/, muse_utils_1.observableCharacteristic(this.controlChar)];\n                    case 7:\n                        _c.rawControlData = (_g.sent()).pipe(operators_1.map(function (data) { return muse_utils_1.decodeResponse(new Uint8Array(data.buffer)); }), operators_1.share());\n                        this.controlResponses = muse_parse_1.parseControl(this.rawControlData);\n                        return [4 /*yield*/, service.getCharacteristic(TELEMETRY_CHARACTERISTIC)];\n                    case 8:\n                        telemetryCharacteristic = _g.sent();\n                        _d = this;\n                        return [4 /*yield*/, muse_utils_1.observableCharacteristic(telemetryCharacteristic)];\n                    case 9:\n                        _d.telemetryData = (_g.sent()).pipe(operators_1.map(muse_parse_1.parseTelemetry));\n                        return [4 /*yield*/, service.getCharacteristic(GYROSCOPE_CHARACTERISTIC)];\n                    case 10:\n                        gyroscopeCharacteristic = _g.sent();\n                        _e = this;\n                        return [4 /*yield*/, muse_utils_1.observableCharacteristic(gyroscopeCharacteristic)];\n                    case 11:\n                        _e.gyroscopeData = (_g.sent()).pipe(operators_1.map(muse_parse_1.parseGyroscope));\n                        return [4 /*yield*/, service.getCharacteristic(ACCELEROMETER_CHARACTERISTIC)];\n                    case 12:\n                        accelerometerCharacteristic = _g.sent();\n                        _f = this;\n                        return [4 /*yield*/, muse_utils_1.observableCharacteristic(accelerometerCharacteristic)];\n                    case 13:\n                        _f.accelerometerData = (_g.sent()).pipe(operators_1.map(muse_parse_1.parseAccelerometer));\n                        this.eventMarkers = new rxjs_1.Subject();\n                        // EEG\n                        this.eegCharacteristics = [];\n                        eegObservables = [];\n                        channelCount = this.enableAux ? EEG_CHARACTERISTICS.length : 4;\n                        _loop_1 = function (channelIndex) {\n                            var characteristicId, eegChar, _a, _b;\n                            return __generator(this, function (_c) {\n                                switch (_c.label) {\n                                    case 0:\n                                        characteristicId = EEG_CHARACTERISTICS[channelIndex];\n                                        return [4 /*yield*/, service.getCharacteristic(characteristicId)];\n                                    case 1:\n                                        eegChar = _c.sent();\n                                        _b = (_a = eegObservables).push;\n                                        return [4 /*yield*/, muse_utils_1.observableCharacteristic(eegChar)];\n                                    case 2:\n                                        _b.apply(_a, [(_c.sent()).pipe(operators_1.map(function (data) {\n                                                var eventIndex = data.getUint16(0);\n                                                return {\n                                                    electrode: channelIndex,\n                                                    index: eventIndex,\n                                                    samples: muse_parse_1.decodeEEGSamples(new Uint8Array(data.buffer).subarray(2)),\n                                                    timestamp: _this.getTimestamp(eventIndex),\n                                                };\n                                            }))]);\n                                        this_1.eegCharacteristics.push(eegChar);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        channelIndex = 0;\n                        _g.label = 14;\n                    case 14:\n                        if (!(channelIndex < channelCount)) return [3 /*break*/, 17];\n                        return [5 /*yield**/, _loop_1(channelIndex)];\n                    case 15:\n                        _g.sent();\n                        _g.label = 16;\n                    case 16:\n                        channelIndex++;\n                        return [3 /*break*/, 14];\n                    case 17:\n                        this.eegReadings = rxjs_1.merge.apply(void 0, eegObservables);\n                        this.connectionStatus.next(true);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.sendCommand = function (cmd) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.controlChar.writeValue(muse_utils_1.encodeCommand(cmd))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var preset;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.pause()];\n                    case 1:\n                        _a.sent();\n                        preset = this.enableAux ? 'p20' : 'p21';\n                        return [4 /*yield*/, this.controlChar.writeValue(muse_utils_1.encodeCommand(preset))];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.controlChar.writeValue(muse_utils_1.encodeCommand('s'))];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.resume()];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.pause = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.sendCommand('h')];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.resume = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.sendCommand('d')];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.deviceInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var resultListener;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        resultListener = this.controlResponses.pipe(operators_1.filter(function (r) { return !!r.fw; }), operators_1.take(1)).toPromise();\n                        return [4 /*yield*/, this.sendCommand('v1')];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, resultListener];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.injectMarker = function (value, timestamp) {\n        if (timestamp === void 0) { timestamp = new Date().getTime(); }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.eventMarkers.next({ value: value, timestamp: timestamp })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MuseClient.prototype.disconnect = function () {\n        if (this.gatt) {\n            this.lastIndex = null;\n            this.lastTimestamp = null;\n            this.gatt.disconnect();\n            this.connectionStatus.next(false);\n        }\n    };\n    MuseClient.prototype.getTimestamp = function (eventIndex) {\n        var SAMPLES_PER_READING = 12;\n        var READING_DELTA = 1000 * (1.0 / exports.EEG_FREQUENCY) * SAMPLES_PER_READING;\n        if (this.lastIndex === null || this.lastTimestamp === null) {\n            this.lastIndex = eventIndex;\n            this.lastTimestamp = new Date().getTime() - READING_DELTA;\n        }\n        // Handle wrap around\n        while (this.lastIndex - eventIndex > 0x1000) {\n            eventIndex += 0x10000;\n        }\n        if (eventIndex === this.lastIndex) {\n            return this.lastTimestamp;\n        }\n        if (eventIndex > this.lastIndex) {\n            this.lastTimestamp += READING_DELTA * (eventIndex - this.lastIndex);\n            this.lastIndex = eventIndex;\n            return this.lastTimestamp;\n        }\n        else {\n            return this.lastTimestamp - READING_DELTA * (this.lastIndex - eventIndex);\n        }\n    };\n    return MuseClient;\n}());\nexports.MuseClient = MuseClient;\n//# sourceMappingURL=muse.js.map",
dependencies: ["rxjs","rxjs/operators","./lib/muse-interfaces","./lib/muse-parse","./lib/muse-utils","./lib/zip-samples"],
sourceMap: "{\"version\":3,\"file\":\"src/muse.js\",\"sourceRoot\":\"\",\"sources\":[\"src/muse.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\\nimport { filter, first, map, share, take } from 'rxjs/operators';\\n\\nimport {\\n    AccelerometerData,\\n    EEGReading,\\n    EventMarker,\\n    GyroscopeData,\\n    MuseControlResponse,\\n    MuseDeviceInfo,\\n    TelemetryData,\\n    XYZ,\\n} from './lib/muse-interfaces';\\nimport { decodeEEGSamples, parseAccelerometer, parseControl, parseGyroscope, parseTelemetry } from './lib/muse-parse';\\nimport { decodeResponse, encodeCommand, observableCharacteristic } from './lib/muse-utils';\\n\\nexport { zipSamples, EEGSample } from './lib/zip-samples';\\nexport { EEGReading, TelemetryData, AccelerometerData, GyroscopeData, XYZ, MuseControlResponse };\\n\\nexport const MUSE_SERVICE = 0xfe8d;\\nconst CONTROL_CHARACTERISTIC = '273e0001-4c4d-454d-96be-f03bac821358';\\nconst TELEMETRY_CHARACTERISTIC = '273e000b-4c4d-454d-96be-f03bac821358';\\nconst GYROSCOPE_CHARACTERISTIC = '273e0009-4c4d-454d-96be-f03bac821358';\\nconst ACCELEROMETER_CHARACTERISTIC = '273e000a-4c4d-454d-96be-f03bac821358';\\nconst EEG_CHARACTERISTICS = [\\n    '273e0003-4c4d-454d-96be-f03bac821358',\\n    '273e0004-4c4d-454d-96be-f03bac821358',\\n    '273e0005-4c4d-454d-96be-f03bac821358',\\n    '273e0006-4c4d-454d-96be-f03bac821358',\\n    '273e0007-4c4d-454d-96be-f03bac821358',\\n];\\nexport const EEG_FREQUENCY = 256;\\n\\n// These names match the characteristics defined in EEG_CHARACTERISTICS above\\nexport const channelNames = ['TP9', 'AF7', 'AF8', 'TP10', 'AUX'];\\n\\nexport class MuseClient {\\n    enableAux = false;\\n    deviceName: string | null = '';\\n    connectionStatus = new BehaviorSubject<boolean>(false);\\n    rawControlData: Observable<string>;\\n    controlResponses: Observable<MuseControlResponse>;\\n    telemetryData: Observable<TelemetryData>;\\n    gyroscopeData: Observable<GyroscopeData>;\\n    accelerometerData: Observable<AccelerometerData>;\\n    eegReadings: Observable<EEGReading>;\\n    eventMarkers: Subject<EventMarker>;\\n\\n    private gatt: BluetoothRemoteGATTServer | null = null;\\n    private controlChar: BluetoothRemoteGATTCharacteristic;\\n    private eegCharacteristics: BluetoothRemoteGATTCharacteristic[];\\n\\n    private lastIndex: number | null = null;\\n    private lastTimestamp: number | null = null;\\n\\n    async connect(gatt?: BluetoothRemoteGATTServer) {\\n        if (gatt) {\\n            this.gatt = gatt;\\n        } else {\\n            const device = await navigator.bluetooth.requestDevice({\\n                filters: [{ services: [MUSE_SERVICE] }],\\n            });\\n            this.gatt = await device.gatt!.connect();\\n        }\\n        this.deviceName = this.gatt.device.name || null;\\n\\n        const service = await this.gatt.getPrimaryService(MUSE_SERVICE);\\n        fromEvent(this.gatt.device, 'gattserverdisconnected')\\n            .pipe(first())\\n            .subscribe(() => {\\n                this.gatt = null;\\n                this.connectionStatus.next(false);\\n            });\\n\\n        // Control\\n        this.controlChar = await service.getCharacteristic(CONTROL_CHARACTERISTIC);\\n        this.rawControlData = (await observableCharacteristic(this.controlChar)).pipe(\\n            map((data) => decodeResponse(new Uint8Array(data.buffer))),\\n            share(),\\n        );\\n        this.controlResponses = parseControl(this.rawControlData);\\n\\n        // Battery\\n        const telemetryCharacteristic = await service.getCharacteristic(TELEMETRY_CHARACTERISTIC);\\n        this.telemetryData = (await observableCharacteristic(telemetryCharacteristic)).pipe(map(parseTelemetry));\\n\\n        // Gyroscope\\n        const gyroscopeCharacteristic = await service.getCharacteristic(GYROSCOPE_CHARACTERISTIC);\\n        this.gyroscopeData = (await observableCharacteristic(gyroscopeCharacteristic)).pipe(map(parseGyroscope));\\n\\n        // Accelerometer\\n        const accelerometerCharacteristic = await service.getCharacteristic(ACCELEROMETER_CHARACTERISTIC);\\n        this.accelerometerData = (await observableCharacteristic(accelerometerCharacteristic)).pipe(\\n            map(parseAccelerometer),\\n        );\\n\\n        this.eventMarkers = new Subject();\\n\\n        // EEG\\n        this.eegCharacteristics = [];\\n        const eegObservables = [];\\n        const channelCount = this.enableAux ? EEG_CHARACTERISTICS.length : 4;\\n        for (let channelIndex = 0; channelIndex < channelCount; channelIndex++) {\\n            const characteristicId = EEG_CHARACTERISTICS[channelIndex];\\n            const eegChar = await service.getCharacteristic(characteristicId);\\n            eegObservables.push(\\n                (await observableCharacteristic(eegChar)).pipe(\\n                    map((data) => {\\n                        const eventIndex = data.getUint16(0);\\n                        return {\\n                            electrode: channelIndex,\\n                            index: eventIndex,\\n                            samples: decodeEEGSamples(new Uint8Array(data.buffer).subarray(2)),\\n                            timestamp: this.getTimestamp(eventIndex),\\n                        };\\n                    }),\\n                ),\\n            );\\n            this.eegCharacteristics.push(eegChar);\\n        }\\n        this.eegReadings = merge(...eegObservables);\\n        this.connectionStatus.next(true);\\n    }\\n\\n    async sendCommand(cmd: string) {\\n        await this.controlChar.writeValue(encodeCommand(cmd));\\n    }\\n\\n    async start() {\\n        await this.pause();\\n        const preset = this.enableAux ? 'p20' : 'p21';\\n        await this.controlChar.writeValue(encodeCommand(preset));\\n        await this.controlChar.writeValue(encodeCommand('s'));\\n        await this.resume();\\n    }\\n\\n    async pause() {\\n        await this.sendCommand('h');\\n    }\\n\\n    async resume() {\\n        await this.sendCommand('d');\\n    }\\n\\n    async deviceInfo() {\\n        const resultListener = this.controlResponses.pipe(filter((r) => !!r.fw), take(1)).toPromise();\\n        await this.sendCommand('v1');\\n        return resultListener as Promise<MuseDeviceInfo>;\\n    }\\n\\n    async injectMarker(value: string | number, timestamp: number = new Date().getTime()) {\\n        await this.eventMarkers.next({ value, timestamp });\\n    }\\n\\n    disconnect() {\\n        if (this.gatt) {\\n            this.lastIndex = null;\\n            this.lastTimestamp = null;\\n            this.gatt.disconnect();\\n            this.connectionStatus.next(false);\\n        }\\n    }\\n\\n    private getTimestamp(eventIndex: number) {\\n        const SAMPLES_PER_READING = 12;\\n        const READING_DELTA = 1000 * (1.0 / EEG_FREQUENCY) * SAMPLES_PER_READING;\\n        if (this.lastIndex === null || this.lastTimestamp === null) {\\n            this.lastIndex = eventIndex;\\n            this.lastTimestamp = new Date().getTime() - READING_DELTA;\\n        }\\n\\n        // Handle wrap around\\n        while (this.lastIndex - eventIndex > 0x1000) {\\n            eventIndex += 0x10000;\\n        }\\n\\n        if (eventIndex === this.lastIndex) {\\n            return this.lastTimestamp;\\n        }\\n        if (eventIndex > this.lastIndex) {\\n            this.lastTimestamp += READING_DELTA * (eventIndex - this.lastIndex);\\n            this.lastIndex = eventIndex;\\n            return this.lastTimestamp;\\n        } else {\\n            return this.lastTimestamp - READING_DELTA * (this.lastIndex - eventIndex);\\n        }\\n    }\\n}\\n\"]}",
headerContent: undefined,
mtime: 1578214476000
};